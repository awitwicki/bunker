import datetime
import traceback

from discord.ext import commands

from config import TOKEN, GENERAL_TEXT_CHANNEL_ID
from generator import *
from utils import is_author_game_creator, is_author_bunker_admin, filter_players_not_in_room, \
    convert_mentions_to_user_ids

bot = commands.Bot(command_prefix='!')  # –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '!'

room = {}


# # # Info


@bot.event
async def on_connect():
    msg = f'{bot.user.name} has connected!'
    await bot.get_channel(GENERAL_TEXT_CHANNEL_ID).send(msg)
    print(msg)


@bot.event
async def on_ready():
    msg = f'{bot.user.name} is ready!'
    await bot.get_channel(GENERAL_TEXT_CHANNEL_ID).send(msg)
    print(msg)


@bot.event
async def on_resume():
    msg = f'{bot.user.name} was resumed!'
    await bot.get_channel(GENERAL_TEXT_CHANNEL_ID).send(msg)
    print(msg)


@bot.event
async def on_disconnect():
    msg = f'{bot.user.name} has disconnected!'
    await bot.get_channel(GENERAL_TEXT_CHANNEL_ID).send(msg)
    print(msg)


@bot.event
async def on_error(event, *args, **kwargs):
    exception_str = traceback.format_exc()
    msg = f'{bot.user.name} encountered an error ' \
          f'at {datetime.datetime.now()} ' \
          f'while handling {event} event ' \
          f'with args {args} ' \
          f'and kwargs {kwargs} ' \
          f':\n' \
          f'{exception_str}'
    await bot.get_channel(GENERAL_TEXT_CHANNEL_ID).send(msg)
    print(msg)

    with open('err.log', 'a') as f:
        f.write(msg)


# # # Game commands


@bot.command(name='start', help='–ù–∞—á–∞—Ç—å –Ω–∞–±–æ—Ä –≤ –∏–≥—Ä—É.')
@commands.check(is_author_bunker_admin)
async def start(context):
    room[context.author.id] = context.author

    response = build_register_message()
    message = await context.send(response)

    await message.add_reaction("‚ò¢Ô∏è")
    await context.message.delete()


@bot.command(name='go', help='–ù–∞—á–∞—Ç—å –∏–≥—Ä—É.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
async def go(context):
    apocalypse = randomize_apocalypse()
    message = await context.send(apocalypse)

    for user_id in room:
        user = await bot.fetch_user(user_id)
        message = randomize_profile()
        await user.send(message)
    await context.message.delete()


@bot.command(name='finish', help='–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
async def finish(context):
    global room
    room = {}

    message = await context.send(
        f"{'='*50}\n"
        "–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞, –≤—Å–µ —É–º–µ—Ä–ª–∏.\n"
        f"{'='*50}"
    )

    await message.add_reaction("üòÄ")
    await message.add_reaction("‚òπÔ∏è")
    await context.message.delete()


@bot.command(name='newcard', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newcard(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –∫–∞—Ä—Ç–∞:\n'
        message += randomize_card()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newprofession', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newprofession(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:\n'
        message += randomize_profession()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newprofessions', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏—é –¥–ª—è –≤—Å–µ—Ö.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
async def go(context):
    for user_id in room:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—è –Ω–æ–≤–∞—è –ü—Ä–æ—Ñ–µ—Å—Å–∏—è:\n'
        message += randomize_profession()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newbagage', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –±–∞–≥–∞–∂ –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newcard(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–π –±–∞–≥–∞–∂:\n'
        message += randomize_bagage()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newhealth', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–¥–æ—Ä–æ–≤—å—è –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newcard(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–µ –Ω–æ–≤–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ:\n'
        message += randomize_health()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newhobby', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–±–±–∏ –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newcard(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ—ë –Ω–æ–≤–æ–µ —Ö–æ–±–±–∏:\n'
        message += randomize_hobby()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newhobbies', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ö–æ–±–±–∏ –¥–ª—è –≤—Å–µ—Ö.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
async def newhobbies(context):
    for user_id in room:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–µ –Ω–æ–≤–æ–µ –•–æ–±–±–∏:\n'
        message += randomize_hobby()
        await user.send(message)

    await context.message.delete()


@bot.command(name='newbio', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—Ä–æ—Å—Ç–≤–µ—Å –¥–ª—è @–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
@filter_players_not_in_room(room=room)
@convert_mentions_to_user_ids
async def newcard(context, *args):
    for user_id in args:
        user = await bot.fetch_user(user_id)
        message = '–í–æ—Ç —Ç–≤–æ–π –Ω–æ–≤—ã–π –ø–æ–ª—Ä–æ—Å—Ç–≤–µ—Å:\n'
        message += randomize_bio()
        await user.send(message)
    await context.message.delete()


@bot.command(name='newapocalypse', help='–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—É.')
@commands.check(is_author_bunker_admin)
@commands.check(lambda context: is_author_game_creator(context, room))
async def newapocalypse(context, *args):  # —Å–æ–∑–¥–∞–µ–º –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω—Ü–∏—é –±–æ—Ç–∞
    apocalypse = randomize_apocalypse()
    message = await context.send(apocalypse)
    await context.message.delete()


@bot.event
async def on_reaction_add(reaction, user):
    if user.id != bot.user.id \
            and user.id not in room \
            and reaction.emoji == '‚ò¢Ô∏è':

        room[user.id] = user
        await reaction.message.edit(content=build_register_message())


def build_register_message():
    confirmed_players = [user.mention for user in room.values()]

    response = "–û–∫, –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ –≥—Ä—É–ø–ø—É, " \
               "–≤—Å–µ –∫—Ç–æ —Ö–æ—á–µ—Ç —É—á–∞–≤—Å—Ç–≤–æ–≤–∞—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –±–æ–º–±—É –ø–æ–¥ —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.\n" \
               f"–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã–µ –ª—é–¥–∏:{confirmed_players}" \
               "\n\n" \
               "–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É, —Å–æ–∑–¥–∞—Ç–µ–ª—å –∏–≥—Ä—ã –¥–æ–ª–∂–µ–Ω –Ω–∞–ø–∏—Å–∞—Ç—å !go"

    return response


bot.run(TOKEN)
